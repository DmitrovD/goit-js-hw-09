{"version":3,"sources":["js/03-promises.js"],"names":["refs","delay","document","querySelector","step","amount","submitBtn","submitForm","evt","preventDefault","value","Number","position","createPromise","then","console","log","catch","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener"],"mappings":";AAAA,MAAMA,EAAO,CACXC,MAAOC,SAASC,cAAc,qBAC9BC,KAAMF,SAASC,cAAc,oBAC7BE,OAAQH,SAASC,cAAc,sBAC/BG,UAAWJ,SAASC,cAAc,wBAKpC,SAASI,EAAWC,GAClBA,EAAIC,iBAEEJ,MAAAA,EAASL,EAAKK,OAAOK,MACrBN,EAAOO,OAAOX,EAAKI,KAAKM,OAC1BT,IAAAA,EAAQU,OAAOX,EAAKC,MAAMS,OAEzB,IAAA,IAAIE,EAAW,EAAGA,GAAYP,EAAQO,GAAY,EACrDC,EAAcD,EAAUX,GACrBa,KAAK,EAAGF,SAAAA,EAAUX,MAAAA,MACjBc,QAAQC,2BAA2BJ,QAAeX,SAEnDgB,MAAM,EAAGL,SAAAA,EAAUX,MAAAA,MAClBc,QAAQC,0BAA0BJ,QAAeX,SAErDA,GAASG,EAIb,SAASS,EAAcD,EAAUX,GACzBiB,MAAAA,EAAgBC,KAAKC,SAAW,GAC/B,OAAA,IAAIC,QAAS,CAACC,EAASC,KAC5BC,WAAW,KACLN,EACFI,EAAQ,CAAEV,SAAAA,EAAUX,MAAAA,IAEpBsB,EAAO,CAAEX,SAAAA,EAAUX,MAAAA,KAEpBA,KA9BPD,EAAKM,UAAUmB,iBAAiB,QAASlB","file":"03-promises.f5387e32.js","sourceRoot":"../src","sourcesContent":["const refs = {\n  delay: document.querySelector('input[name=delay]'),\n  step: document.querySelector('input[name=step]'),\n  amount: document.querySelector('input[name=amount]'),\n  submitBtn: document.querySelector('button[type=submit]'),\n};\n\nrefs.submitBtn.addEventListener('click', submitForm);\n\nfunction submitForm(evt) {\n  evt.preventDefault();\n  \n  const amount = refs.amount.value;\n  const step = Number(refs.step.value);\n  let delay = Number(refs.delay.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise ((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\n\n\n"]}